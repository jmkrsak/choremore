{"ast":null,"code":"var _jsxFileName = \"/Users/john-michaelkrsak/Documents/Programming/choremore.net/src/views/login.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport validator from 'validator';\nimport MyModal from '../components/modal';\nimport { Button, Form, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [openError, setOpenError] = useState(false);\n  const [errorTitle, setErrorTitle] = useState(\"\");\n  const [errorBody, setErrorBody] = useState(null);\n  const [errorActions, setErrorActions] = useState(null);\n  const validated = () => {\n    let errors = [];\n    if (!validator.isEmail(email)) {\n      errors.push(\"this is not an email, try again\");\n    }\n    const specialCar = [\"!\", \"@\", \"#\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\"];\n    if (!validator.isLength(password, {\n      min: 8,\n      max: 16\n    }) || !validator.isAlphanumeric(password) || !validator.contains(password, specialCar)) {\n      errors.push(\"password must be between 8-16 characters, alphanumeric, and at least one special character\");\n    }\n    if (errors.length > 0) {\n      setErrorTitle(\"Error\");\n      setErrorBody( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errors.map(error => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 36\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 26\n      }, this));\n      setErrorActions([]);\n      setOpenError(true);\n      return false;\n    } else {\n      // send to backend\n      return true;\n    }\n  };\n  const onSubmit = e => {\n    if (validated()) {\n      // send to backEnd\n      console.log(\"we made it yall\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"exampleForm.ControlInput1\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"name@example.com\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        className: \"mb-3\",\n        controlId: \"formPlaintextPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          sm: \"2\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"10\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: onSubmit,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      open: openError,\n      setOpen: setOpenError,\n      title: errorTitle,\n      body: errorBody,\n      actions: errorActions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"6C3PoPf96Nu5lsJa46a7YuPC3QY=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","validator","MyModal","Button","Form","Row","Col","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","email","setEmail","password","setPassword","openError","setOpenError","errorTitle","setErrorTitle","errorBody","setErrorBody","errorActions","setErrorActions","validated","errors","isEmail","push","specialCar","isLength","min","max","isAlphanumeric","contains","length","children","map","error","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","console","log","Group","className","controlId","Label","Control","type","placeholder","value","onChange","target","as","column","sm","variant","onClick","open","setOpen","title","body","actions","_c","$RefreshReg$"],"sources":["/Users/john-michaelkrsak/Documents/Programming/choremore.net/src/views/login.js"],"sourcesContent":["\nimport { useState } from 'react'\nimport validator from 'validator'\nimport MyModal from '../components/modal'\nimport {Button, Form, Row, Col} from 'react-bootstrap';\n\nconst Login = ()=> {\n\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [openError, setOpenError] = useState(false)\n    const [errorTitle, setErrorTitle] = useState(\"\")\n    const [errorBody, setErrorBody] = useState(null)\n    const [errorActions, setErrorActions] = useState(null)\n\n    const validated = ()=> {\n\n        let errors = []\n\n        if (!validator.isEmail(email)) {\n            errors.push(\"this is not an email, try again\")\n        }\n        \n        const specialCar = [\"!\", \"@\", \"#\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\"]\n\n        if(!validator.isLength(password, {min: 8, max: 16}) || !validator.isAlphanumeric(password) || !validator.contains(password, specialCar)) {\n            errors.push(\"password must be between 8-16 characters, alphanumeric, and at least one special character\")\n        }\n\n        if (errors.length > 0) {\n            setErrorTitle(\"Error\")\n            setErrorBody(<div>\n                {errors.map(error=><div>{error}</div>)}\n            </div>)\n            setErrorActions([])\n            setOpenError(true)\n            return false\n        } else {\n            // send to backend\n            return true\n        }\n\n    }\n\n    const onSubmit = e=> {\n\n        if (validated()) {\n            // send to backEnd\n            console.log(\"we made it yall\")\n        }\n\n    }\n\n    return <>\n            <Form>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control type=\"email\" placeholder=\"name@example.com\" value={email} onChange={e=>setEmail(e.target.value)} />\n            </Form.Group>\n            <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextPassword\">\n                <Form.Label column sm=\"2\">\n                Password\n                </Form.Label>\n                <Col sm=\"10\">\n                <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={e=>setPassword(e.target.value)} />\n                </Col>\n            </Form.Group>\n            <Button variant=\"primary\" onClick={onSubmit}>Login</Button>\n        </Form>\n        <MyModal open={openError} setOpen={setOpenError} title={errorTitle} body={errorBody} actions={errorActions} />\n        </>\n        \n\n\n}\n\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}